name: CI
on: [push, pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - run: sudo apt-get update -y
      - run: echo sudo apt-get install -y libmfem-dev
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: |
          rustup update ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
          rustup component add clippy
      #- run: cargo clippy -p mfem-sys --features bundled -- -D warnings
      - run: cargo build -p mfem-sys --features bundled
      - run: cargo run -p mfem-sys --features bundled --example ex1 -- --mesh crates/mfem-cpp/mfem/data/escher.mesh

  build-osx:
    runs-on: macos-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - run: brew update
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: |
          rustup update ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - run: cargo build -p mfem-sys --features bundled
      - run: cargo run -p mfem-sys --features bundled --example ex1 -- --mesh crates/mfem-cpp/mfem/data/escher.mesh

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: |
          rustup update ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - run: cargo build -p mfem-sys --features bundled
      - run: cargo run -p mfem-sys --features bundled --example ex1 --verbose -- --mesh crates/mfem-cpp/mfem/data/escher.mesh

  fmt:
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup update
          rustup default stable
          rustup component add rustfmt
      - run: cargo fmt --all -- --check
